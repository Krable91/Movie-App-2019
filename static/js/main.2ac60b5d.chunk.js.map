{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["Movie","id","year","title","summary","poster","genres","rating","runtime","className","src","alt","map","genre","index","key","App","state","sortType","sortKor","isLoading","movies","getMovies","a","async","axios","get","data","setState","value","this","onClick","sortChange","movie","medium_cover_image","React","Component","ReactDOM","render","document","getElementById"],"mappings":"0TAmCeA,MA/Bf,YAA6E,EAA5DC,GAA6D,IAAzDC,EAAwD,EAAxDA,KAAMC,EAAkD,EAAlDA,MAAOC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,OAAQC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,QAC/D,OAAO,yBAAKC,UAAU,SAClB,yBAAKC,IAAKL,EAAQM,IAAKR,EAAOA,MAAQA,IACtC,yBAAKM,UAAU,eACX,0BAAMA,UAAU,gBAAgBN,GAC5B,6BACI,0BAAMM,UAAU,eAAeP,EAA/B,UACA,0BAAMO,UAAU,iBAAiBF,EAAjC,UACA,0BAAME,UAAU,kBAAkBD,EAAlC,WAER,wBAAIC,UAAU,UACTH,EAAOM,KAAI,SAACC,EAAOC,GAAR,OACR,wBAAIC,IAAKD,EAAOL,UAAU,iBAAiBI,OAGnD,uBAAGJ,UAAU,kBAAkBL,MCyE5BY,G,iNArFbC,MAAQ,CACNC,SAAU,GACVC,QAAS,GACTC,WAAW,EACXC,OAAQ,I,EAEVC,UAAY,4BAAAC,EAAAC,OAAA,kEAAAD,EAAA,MAEJE,IAAMC,IAAN,4DAA+D,EAAKR,YAFhE,gBACYG,EADZ,EACHM,KAAQA,KAAON,OAEtB,EAAKO,SAAS,CAAEP,SAAQD,WAAW,IAHzB,sC,0EAKDS,GAAO,IAAD,EACaC,KAAKb,MAA1BC,EADQ,EACRA,SADQ,EACEC,QACH,IAAVU,GACFC,KAAKZ,SAAW,SAChBY,KAAKX,QAAS,sBACK,IAAVU,GACTC,KAAKZ,SAAW,aAChBY,KAAKX,QAAS,yCACK,IAAVU,GACTC,KAAKZ,SAAW,QAChBY,KAAKX,QAAS,sBACK,IAAVU,GACTC,KAAKZ,SAAW,OAChBY,KAAKX,QAAS,kCACK,IAAVU,IACTC,KAAKZ,SAAW,aAChBY,KAAKX,QAAS,4BAEhBW,KAAKF,SAAS,CAACV,aACfY,KAAKR,c,+BAEG,IAAD,SACsBQ,KAAKb,MAA1BG,EADD,EACCA,UAAWC,EADZ,EACYA,OACnB,OACE,6BAASZ,UAAU,aACjB,yBAAKA,UAAU,UACX,yBAAKA,UAAU,YACb,4BAAQsB,QAAS,kBAAM,EAAKC,WAAW,KAAvC,sBAGA,4BAAQD,QAAS,kBAAM,EAAKC,WAAW,KAAvC,yCAGA,4BAAQD,QAAS,kBAAM,EAAKC,WAAW,KAAvC,sBAGA,4BAAQD,QAAS,kBAAM,EAAKC,WAAW,KAAvC,kCAGA,4BAAQD,QAAS,kBAAM,EAAKC,WAAW,KAAvC,6BAIDZ,EACC,uGAEA,8BAAOU,KAAKX,UAGjBC,EACC,yBAAKX,UAAU,eACb,6CAGF,yBAAKA,UAAU,UACZY,EAAOT,KAAI,SAAAqB,GAAK,OACf,kBAAC,EAAD,CACElB,IAAKkB,EAAMhC,GACXA,GAAIgC,EAAMhC,GACVC,KAAM+B,EAAM/B,KACZC,MAAO8B,EAAM9B,MACbC,QAAS6B,EAAM7B,QACfC,OAAQ4B,EAAMC,mBACd5B,OAAQ2B,EAAM3B,OACdC,OAAQ0B,EAAM1B,OACdC,QAASyB,EAAMzB,mB,GA7Eb2B,IAAMC,YCFxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.2ac60b5d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport propTypes from \"prop-types\";\r\nimport \"./Movie.css\";\r\n\r\nfunction Movie({ id, year, title, summary, poster, genres, rating, runtime}) {\r\n    return <div className=\"movie\">\r\n        <img src={poster} alt={title} title= {title}/>\r\n        <div className=\"movie__data\">\r\n            <span className=\"movie__title\">{title}</span>\r\n                <div>\r\n                    <span className=\"movie__year\">{year}년</span>\r\n                    <span className=\"movie__rating\">{rating}점</span>\r\n                    <span className=\"movie__runtime\">{runtime}분</span>\r\n                </div>\r\n            <ul className=\"genres\">\r\n                {genres.map((genre, index) => (\r\n                    <li key={index} className=\"genres__genre\">{genre}</li>\r\n            ))}\r\n            </ul>\r\n            <p className=\"movie__summary\">{summary}</p>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nMovie.propTypes = {\r\n    id: propTypes.number.isRequired,\r\n    year: propTypes.number.isRequired,\r\n    title: propTypes.string.isRequired,\r\n    summary: propTypes.string.isRequired,\r\n    rating: propTypes.number.isRequired,\r\n    runtime: propTypes.number.isRequired,\r\n    poster: propTypes.string.isRequired,\r\n    genres: propTypes.arrayOf(propTypes.string).isRequired\r\n};\r\n\r\nexport default Movie;","import React from \"react\";\nimport axios from \"axios\";\nimport Movie from \"./Movie\";\nimport \"./App.css\";\n/*import \"./APP_example.css\";*/\n\nclass App extends React.Component {\n  state = {\n    sortType: \"\",\n    sortKor: \"\",\n    isLoading: true,\n    movies: []\n  }\n  getMovies = async () => {\n    const {data: { data: {movies}}} = \n    await axios.get(`https://yts-proxy.now.sh/list_movies.json?sort_by=${this.sortType}`);\n    this.setState({ movies, isLoading: false })\n  }\n  sortChange(value){\n    const {sortType, sortKor} = this.state;\n    if (value === 1) {\n      this.sortType = \"rating\";\n      this.sortKor= \"평점순\";\n    } else if (value === 2) {\n      this.sortType = \"date_added\";\n      this.sortKor= \"추가된 날짜순\";\n    } else if (value === 3){\n      this.sortType = \"title\";\n      this.sortKor= \"제목순\";\n    } else if (value === 4){\n      this.sortType = \"year\";\n      this.sortKor= \"제작년도순\";\n    } else if (value === 5){\n      this.sortType = \"like_count\";\n      this.sortKor= \"선호도순\";\n    }\n    this.setState({sortType})\n    this.getMovies();\n  }\n  render() {\n    const { isLoading, movies} = this.state;\n    return (\n      <section className=\"container\">\n        <div className=\"header\">\n            <div className=\"sortBtns\">\n              <button onClick={() => this.sortChange(1)}>\n                평점순\n              </button>\n              <button onClick={() => this.sortChange(2)}>\n                추가된 날짜순\n              </button>\n              <button onClick={() => this.sortChange(3)}>\n                제목순\n              </button>\n              <button onClick={() => this.sortChange(4)}>\n                제작년도순\n              </button>\n              <button onClick={() => this.sortChange(5)}>\n                선호도순\n              </button>\n            </div>\n            {isLoading ? (\n              <span>정렬 방식을 선택해주세요.</span>\n            ) : (\n              <span>{this.sortKor}</span>\n            )}\n          </div> \n        {isLoading ? (\n          <div className=\"firstComent\">\n            <span>Waiting...</span>\n          </div>\n        ) : (\n          <div className=\"movies\">\n            {movies.map(movie => (\n              <Movie \n                key={movie.id}\n                id={movie.id} \n                year={movie.year} \n                title={movie.title} \n                summary={movie.summary} \n                poster={movie.medium_cover_image}\n                genres={movie.genres}\n                rating={movie.rating}\n                runtime={movie.runtime}\n              />\n            ))}\n          </div>\n        )}\n      </section>\n    )\n  }\n}\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}